plugins {
    id "org.springframework.boot" version "2.2.4.RELEASE"
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
    id 'jacoco'
}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

bootJar {
    baseName = 'com.budget'
    version =  '1.0.0'
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

repositories {
    jcenter()
}

sourceSets {
    main.java.srcDirs += "build/generated/source/apt/main"
}

ext {
    mapstructVersion = "1.3.0.Final"
    lombokVersion = "1.18.10"
    mockitoVersion = "3.0.0"
}

dependencies {
    compileOnly 'org.projectlombok:lombok'
    compile "com.fasterxml.jackson.core:jackson-databind"
    compile "org.mapstruct:mapstruct:${mapstructVersion}"
    compile "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    
    testImplementation ('org.springframework.boot:spring-boot-starter-test'){
        exclude group: 'junit', module: 'junit'
    }
}

compileJava {
    options.compilerArgs = [
        '-Amapstruct.defaultComponentModel=spring'
    ]
}

jacoco {
    toolVersion = "0.8.5"
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/jacoco/reports")
    }
}

test {
	useJUnitPlatform()
	testLogging.showStandardStreams=true

    testLogging {
        events "passed", "skipped", "failed"
    }
    finalizedBy jacocoTestReport
}